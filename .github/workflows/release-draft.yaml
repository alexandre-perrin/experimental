# Inspired from thomaseizinger/github-action-gitflow-release-workflow

name: Release POC 2 - Draft

on:

  workflow_dispatch:
    inputs:

      indice:
        description: Sementic version indice to increase
        type: choice
        options:
          - MAJOR
          - MINOR
          - PATCH
        default: PATCH
        required: true

jobs:

  pre-release:

    name: Start a pre-release

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.CI_PAT }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/context-summary

      - name: Prepare git
        uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          global: true
          name: ${{ github.actor }}
          email: ${{ github.actor }}@users.noreply.github.com
          token: ${{ secrets.CI_PAT }}

      - name: Bump version
        run: |
          echo Bumping ${{ inputs.indice }} to $VALUE, new version: ${VERSION}
          source ./scripts/bump_version.sh ${{ inputs.indice }}
          echo TAG=v${VERSION} >> $GITHUB_ENV
          echo MAJOR=${MAJOR} >> $GITHUB_ENV
          echo MINOR=${MINOR} >> $GITHUB_ENV
          echo PATCH=${PATCH} >> $GITHUB_ENV

      - name: Switch to release branch
        run: |
          BRANCH=release/v${MAJOR}
          case ${{ inputs.indice }} in
            MINOR)
              BRANCH=${BRANCH}.${MINOR}
              ;;
            PATCH)
              BRANCH=${BRANCH}.${MINOR}.${PATCH}
              ;;
            *)
              ;;
          esac
          git checkout $BRANCH || git checkout -b $BRANCH
          git pull
          git merge --no-ff main
          git push --set-upstream origin HEAD

      - name: Prepare staging branch
        id: staging
        run: |
          STAGING_BASE=staging/${{ env.TAG }}-rc
          LAST_RC=$(git ls-remote --quiet --heads origin "${STAGING_BASE}*" | wc -l)
          LAST_RC=${LAST_RC:-0}
          STAGING_BRANCH=${STAGING_BASE}$(expr $LAST_RC + 1)
          echo STAGING_BRANCH=$STAGING_BRANCH >> $GITHUB_ENV

          git checkout --track -b ${STAGING_BRANCH}

      - name: Updated version
        run: |
          sed \
              -e "s/MAJOR\ =\ .*/MAJOR\ =\ $MAJOR/" \
              -e "s/MINOR\ =\ .*/MINOR\ =\ $MINOR/" \
              -e "s/PATCH\ =\ .*/PATCH\ =\ $PATCH/" \
              -i version.mk

          git add version.mk
          git commit -m "Bump version to ${VERSION}"

      - name: Push to repo
        run: |
          echo SHA=$(git rev-parse HEAD) >> $GITHUB_ENV
          git push --set-upstream origin HEAD

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          github-token: ${{ secrets.CI_PAT }}
          head: ${{ env.STAGING_BRANCH }}
          base: release/v${{ inputs.major }}
          title: Release version ${{ env.TAG }}
          body: |
            Release ${{ env.TAG }} triggered from ${{ github.actor }}:

            - workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - commit: ${{ env.SHA }}

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
